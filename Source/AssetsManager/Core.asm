
                ifndef _ASSETS_MANAGER_CORE_
                define _ASSETS_MANAGER_CORE_
; -----------------------------------------
; преобразование размера ресурса в блоки по 256 байт
; In:
;   IX - адрес структуры FAssets
; Out:
;   A  - количество блоков по 256 байт
;   BC - реальный размер блока до 16кб
; Corrupt:
;   BC, AF
; Note:
;   необходимо включить страницу с данными о доступной ОЗУ
; -----------------------------------------
CalcSizeToBlock:; округление размера ресурса в большую сторону (кратный 256)
                LD B, (IX + FAssets.Size)
                SRL B
                LD A, (IX + FAssets.Flags)
                RRA
                SRL B
                RRA
                LD C, A
                XOR A
                CP C
                ADC A, B
                RET
; -----------------------------------------
; преобразование линейного адреса к позиции на диске
; In:
;   IX - адрес структуры FAssets
; Out:
;   D  - номер дорожки (0..159)
;   E  - номер сектора (0..15)
; Corrupt:
;   DE, AF
; Note:
;   необходимо включить страницу с данными о доступной ОЗУ
; -----------------------------------------
CalcSecToDisk:  ; приведение линейного адресу к позицию на диске
                LD DE, (IX + FAssets.Location.Sector)

                ; приведение к номеру сетора
                LD A, E
                AND #0F

                ; приведение к номеру дорожки
                EX DE, HL
                ADD HL, HL  ; x2
                ADD HL, HL  ; x4
                ADD HL, HL  ; x8
                ADD HL, HL  ; x16
                EX DE, HL
                LD E, A                                                         ; номер сектора
                RET
; -----------------------------------------
; преобразование линейного адреса в расположение и номер бита
; In:
;   IX - адрес структуры FAssets
; Out:
;   HL - адрес расположения бита линейного адреса
;   B  - номер бита линейного адреса (0..7)
; Corrupt:
;   HL, BC, AF
; Note:
;   необходимо включить страницу с данными о доступной ОЗУ
; -----------------------------------------
CalcAvailableMem; FAssets.Address.Page - номер страницы
                ;
                ;      7    6    5    4    3    2    1    0
                ;   +----+----+----+----+----+----+----+----+
                ;   | 0  | 0  | 0  | A7 | A6 | A5 | A4 | A3 |
                ;   +----+----+----+----+----+----+----+----+
                ;
                ;   A7-A3   [4..0]      - страница памяти 16кб
                ;                         часть адреса хранения битовой маски
                ;   
                ; FAssets.Address.Adr - адрес
                ;
                ;   +----+----+----+----+----+----+----+----+   +----+----+----+----+----+----+----+----+
                ;  | 15 | 14 | 13 | 12 | 11 | 10 |  9 |  8 |   |  7 |  6 |  5 |  4 |  3 |  2 |  1 |  0 |
                ;  +----+----+----+----+----+----+----+----+   +----+----+----+----+----+----+----+----+
                ;  | 1  | 1  | A2 | A1 | A0 | B2 | B1 | B0 |   | X  | X  | X  | X  | X  | X  | X  | X  |
                ;  +----+----+----+----+----+----+----+----+   +----+----+----+----+----+----+----+----+
                ;
                ;   A2-A0   [13..11]    - адрес
                ;                         часть адреса хранения битовой маски
                ;   B2-B0   [10..8]     - адрес
                ;                         номер бита в байте (обратный)

                LD C, (IX + FAssets.Address.Adr.High)
                LD A, (IX + FAssets.Address.Page)
                ADD A, A    ; x2
                ADD A, A    ; x4
                ADD A, A    ; x8
                LD L, A
                LD A, C
                RRA
                RRA
                RRA
                AND #07
                OR L
                LD L, A
                LD H, HIGH Adr.AvailableMem
                LD A, C
                CPL
                AND #07
                LD B, A
                RET
; -----------------------------------------
; копирование данных об ассете
; In:
;   IX - адрес структуры FAssets
; Out:
; Corrupt:
;   HL, DE, BC
; Note:
;   необходимо включить страницу с данными о доступной ОЗУ
; -----------------------------------------
CopyAssetsData: PUSH IX
                POP HL

                ; для более удобной работы с последним загруженным ассетом,
                ; копирование данных ассета в буфер

                ; LD DE, Adr.BufferAssets
                ; LD BC, FAssets
                ; LDIR

                RET

                endif ; ~ _ASSETS_MANAGER_CORE_
